version: '3.7'

services:
    traefik:
        image: traefik:v2.9
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entryPoints.websecure.address=:80"
        networks:
            - dropin
        ports:
            - "80:80"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    app:
        container_name: app
        restart: always
        build:
            context: ./frontend
            dockerfile: Dockerfile
        networks:
            - dropin
        environment:
            NEXT_PUBLIC_API_URL: ${DOMAIN}
            API_URL: http://api:${PORT}/api/v1
        labels:
            - traefik.enable=true
            - traefik.http.routers.app.entrypoints=websecure
            - traefik.http.routers.app.rule=(Host(`${HOST}`) && PathPrefix(`/`) || Host(`www.${HOST}`) && PathPrefix(`/`))
            - traefik.http.services.app.loadbalancer.server.port=3000
        depends_on:
            - api
            - traefik

    admin:
        container_name: admin
        restart: always
        build:
            context: ./admin
            dockerfile: Dockerfile
        networks:
            - dropin
        environment:
            NEXT_PUBLIC_API_URL: ${DOMAIN}
            API_URL: http://api:${PORT}/api/v1
        labels:
            - traefik.enable=true
            - traefik.http.routers.admin.entrypoints=websecure
            - traefik.http.routers.admin.rule=(Host(`${HOST}`) && PathPrefix(`/admin`) || Host(`www.${HOST}`) && PathPrefix(`/admin`))
            - traefik.http.services.admin.loadbalancer.server.port=3001
        depends_on:
            - api
            - traefik

    api:
        container_name: api
        restart: always
        build:
            context: ./backend
            dockerfile: Dockerfile
        networks:
            - dropin
        ports:
            - "3030:3030"
        labels:
            - traefik.enable=true
            - traefik.http.routers.api.entrypoints=websecure
            - traefik.http.routers.api.rule=(Host(`${HOST}`) && PathPrefix(`/api/v1`) || Host(`www.${HOST}`) && PathPrefix(`/api/v1`))
            - traefik.http.services.api.loadbalancer.server.port=${PORT}
        environment:
            PORT: ${PORT}
            POSTGRES_HOST: ${POSTGRES_HOST}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_PORT: ${POSTGRES_PORT}
            DOMAIN: ${DOMAIN}
            HOST: ${HOST}
            GET_IMAGE_PATH: ${GET_IMAGE_PATH}
            UPLOAD_URL: ${UPLOAD_URL}
            JWT_SECRET: ${JWT_SECRET}
        depends_on:
            - database
            - traefik
        volumes:
            - ../volumes/documents:/build/documents
            - ../volumes/uploads:/build/uploads


    # -----------------------------------

    database:
        image: postgres:alpine
        container_name: database
        ports:
            - "${POSTGRES_PORT}:5432"
        networks:
            - dropin
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - ../volumes/database/:/var/lib/postgresql/data

networks:
    dropin:
        driver: bridge
